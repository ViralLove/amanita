#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –∫–∞—Ç–∞–ª–æ–≥–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
"""

import sys
import os
sys.path.append('.')

from bot.services.core.blockchain import BlockchainService
from bot.services.product.registry import ProductRegistryService
from bot.services.product.validation import ProductValidationService
from bot.services.core.account import AccountService
from bot.services.core.ipfs_factory import IPFSFactory
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º .env —Ñ–∞–π–ª
load_dotenv()

def analyze_missing_images():
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã –∏ –≤—ã—è–≤–ª—è–µ—Ç –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
    
    print("üîç –ê–Ω–∞–ª–∏–∑ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –∫–∞—Ç–∞–ª–æ–≥–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤")
    print("=" * 60)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å—ã
    blockchain_service = BlockchainService()
    storage_service = IPFSFactory().get_storage()
    validation_service = ProductValidationService()
    account_service = AccountService(blockchain_service)
    
    product_registry = ProductRegistryService(
        blockchain_service=blockchain_service,
        storage_service=storage_service,
        validation_service=validation_service,
        account_service=account_service
    )
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã
    products = product_registry.get_all_products()
    
    print(f"üìä –í—Å–µ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≤ –∫–∞—Ç–∞–ª–æ–≥–µ: {len(products)}")
    print()
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π –ø—Ä–æ–¥—É–∫—Ç
    products_with_images = []
    products_without_images = []
    
    for i, product in enumerate(products, 1):
        product_info = {
            'id': product.id,
            'title': product.title,
            'cover_image_cid': product.cid,
            'cover_image_url': product.cover_image_url,
            'species': product.species,
            'form': product.forms[0] if product.forms else 'N/A'
        }
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        if product.cid and product.cid.strip() and product.cover_image_url and product.cover_image_url.strip():
            products_with_images.append(product_info)
        else:
            products_without_images.append(product_info)
    
    # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print(f"‚úÖ –ü—Ä–æ–¥—É–∫—Ç—ã –° –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏: {len(products_with_images)}")
    print(f"‚ùå –ü—Ä–æ–¥—É–∫—Ç—ã –ë–ï–ó –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {len(products_without_images)}")
    print()
    
    if products_without_images:
        print("üö® –°–ü–ò–°–û–ö –ü–†–û–î–£–ö–¢–û–í –ë–ï–ó –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô:")
        print("-" * 60)
        for i, product in enumerate(products_without_images, 1):
            print(f"{i:2d}. ID: {product['id']}")
            print(f"    –ù–∞–∑–≤–∞–Ω–∏–µ: {product['title']}")
            print(f"    –í–∏–¥: {product['species']}")
            print(f"    –§–æ—Ä–º–∞: {product['form']}")
            print(f"    CID: '{product['cover_image_cid']}'")
            print(f"    URL: '{product['cover_image_url']}'")
            print()
    
    if products_with_images:
        print("‚úÖ –ü–†–û–î–£–ö–¢–´ –° –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø–ú–ò:")
        print("-" * 60)
        for i, product in enumerate(products_with_images, 1):
            print(f"{i:2d}. {product['title']} ({product['species']})")
            print(f"    CID: {product['cover_image_cid']}")
            print(f"    URL: {product['cover_image_url']}")
            print()
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    print("üìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print("-" * 60)
    print(f"–í—Å–µ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤: {len(products)}")
    print(f"–° –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏: {len(products_with_images)} ({len(products_with_images)/len(products)*100:.1f}%)")
    print(f"–ë–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {len(products_without_images)} ({len(products_without_images)/len(products)*100:.1f}%)")
    
    if products_without_images:
        print()
        print("üîß –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
        print("-" * 60)
        print("1. –ü—Ä–æ–¥–∞–≤—Ü—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–±–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è —Å–ª–µ–¥—É—é—â–∏—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤:")
        for product in products_without_images:
            print(f"   - {product['title']} ({product['species']})")
        print()
        print("2. –ü–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –æ–±–Ω–æ–≤–∏—Ç—å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –≤ IPFS")
        print("3. –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ –±–ª–æ–∫—á–µ–π–Ω–µ")

if __name__ == "__main__":
    analyze_missing_images() 