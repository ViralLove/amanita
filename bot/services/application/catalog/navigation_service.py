"""
–°–µ—Ä–≤–∏—Å –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –∫–∞—Ç–∞–ª–æ–≥—É.
–°–æ–¥–µ—Ä–∂–∏—Ç –ª–æ–≥–∏–∫—É —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.
"""

import logging
from typing import Dict, Any, Optional
from services.common.localization import Localization

logger = logging.getLogger(__name__)


class NavigationService:
    """–°–µ—Ä–≤–∏—Å –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –∫–∞—Ç–∞–ª–æ–≥—É"""
    
    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏"""
        self.logger = logging.getLogger(__name__)
        self.logger.info("[NavigationService] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    
    def create_scroll_message(self, loc: Localization) -> str:
        """
        –°–æ–∑–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –∫–∞—Ç–∞–ª–æ–≥—É
        
        Args:
            loc: –û–±—ä–µ–∫—Ç –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏
            
        Returns:
            str: –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        """
        try:
            self.logger.info("[NavigationService] –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è")
            
            # –°–æ–∑–¥–∞–µ–º —É–ª—É—á—à–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ö—ç—à—Ç–µ–≥–∞–º–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
            scroll_message = (
                f"üìö <b>{loc.t('catalog.title', '–ö–∞—Ç–∞–ª–æ–≥ –ø—Ä–æ–¥—É–∫—Ç–æ–≤')}</b>\n\n"
                f"‚Ä¢ #catalog - {loc.t('catalog.main', '–æ—Å–Ω–æ–≤–Ω–æ–π –∫–∞—Ç–∞–ª–æ–≥')}\n"
                f"‚Ä¢ #search - {loc.t('catalog.search', '–ø–æ–∏—Å–∫ –ø–æ –∫–∞—Ç–∞–ª–æ–≥—É')}\n"
                f"‚Ä¢ #categories - {loc.t('catalog.categories', '–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤')}\n"
                f"‚Ä¢ #favorites - {loc.t('catalog.favorites', '–∏–∑–±—Ä–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã')}\n\n"
                f"üí° {loc.t('catalog.tip', '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ö—ç—à—Ç–µ–≥–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏!')}"
            )
            
            self.logger.info("[NavigationService] –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ")
            return scroll_message
            
        except Exception as e:
            self.logger.error(f"[NavigationService] –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            return loc.t('catalog.error', '‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è')
    
    def handle_catalog_navigation(self, callback_data: str, loc: Localization) -> Optional[Dict[str, Any]]:
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –∫–∞—Ç–∞–ª–æ–≥–∞
        
        Args:
            callback_data: –î–∞–Ω–Ω—ã–µ callback –∑–∞–ø—Ä–æ—Å–∞
            loc: –û–±—ä–µ–∫—Ç –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏
            
        Returns:
            Optional[Dict[str, Any]]: –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏–ª–∏ None
        """
        try:
            self.logger.info(f"[NavigationService] –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏: {callback_data}")
            
            navigation_handlers = {
                'scroll:catalog': self._handle_scroll_catalog,
                'catalog:main': self._handle_main_catalog,
                'catalog:search': self._handle_search_catalog,
                'catalog:categories': self._handle_categories_catalog,
                'catalog:favorites': self._handle_favorites_catalog
            }
            
            handler = navigation_handlers.get(callback_data)
            if handler:
                return handler(loc)
            else:
                self.logger.warning(f"[NavigationService] –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {callback_data}")
                return None
                
        except Exception as e:
            self.logger.error(f"[NavigationService] –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏: {e}")
            return None
    
    def _handle_scroll_catalog(self, loc: Localization) -> Dict[str, Any]:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–∫—Ä–æ–ª–ª–∞ –∫ –∫–∞—Ç–∞–ª–æ–≥—É"""
        return {
            'action': 'scroll',
            'message': self.create_scroll_message(loc),
            'keyboard': None
        }
    
    def _handle_main_catalog(self, loc: Localization) -> Dict[str, Any]:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞"""
        return {
            'action': 'show_catalog',
            'message': loc.t('catalog.loading', 'üìö –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ç–∞–ª–æ–≥...'),
            'keyboard': None
        }
    
    def _handle_search_catalog(self, loc: Localization) -> Dict[str, Any]:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ –∫–∞—Ç–∞–ª–æ–≥–µ"""
        return {
            'action': 'search',
            'message': loc.t('catalog.search_prompt', 'üîç –í–≤–µ–¥–∏—Ç–µ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å:'),
            'keyboard': None
        }
    
    def _handle_categories_catalog(self, loc: Localization) -> Dict[str, Any]:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∫–∞—Ç–∞–ª–æ–≥–∞"""
        return {
            'action': 'show_categories',
            'message': loc.t('catalog.categories_loading', 'üìÇ –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...'),
            'keyboard': None
        }
    
    def _handle_favorites_catalog(self, loc: Localization) -> Dict[str, Any]:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤"""
        return {
            'action': 'show_favorites',
            'message': loc.t('catalog.favorites_loading', '‚≠ê –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–±—Ä–∞–Ω–Ω–æ–µ...'),
            'keyboard': None
        }
    
    def create_hashtag_keyboard(self, loc: Localization) -> Optional[Any]:
        """
        –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Ö—ç—à—Ç–µ–≥–∞–º–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        
        Args:
            loc: –û–±—ä–µ–∫—Ç –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏
            
        Returns:
            Optional[Any]: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å —Ö—ç—à—Ç–µ–≥–∞–º–∏ –∏–ª–∏ None
        """
        try:
            # TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å —Ö—ç—à—Ç–µ–≥–∞–º–∏
            # –≠—Ç–æ –±—É–¥–µ—Ç —Å–¥–µ–ª–∞–Ω–æ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –∏—Ç–µ—Ä–∞—Ü–∏—è—Ö
            self.logger.info("[NavigationService] –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å —Ö—ç—à—Ç–µ–≥–∞–º–∏ (–∑–∞–≥–ª—É—à–∫–∞)")
            return None
            
        except Exception as e:
            self.logger.error(f"[NavigationService] –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å —Ö—ç—à—Ç–µ–≥–∞–º–∏: {e}")
            return None
