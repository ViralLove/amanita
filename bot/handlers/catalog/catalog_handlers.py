"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–∞—Ç–∞–ª–æ–≥–æ–º –ø—Ä–æ–¥—É–∫—Ç–æ–≤.
–°–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ UI –ª–æ–≥–∏–∫—É, –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ –≤—ã–Ω–µ—Å–µ–Ω–∞ –≤ CatalogService.
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç BaseCatalogHandler –∏ –º–∏–∫—Å–∏–Ω—ã –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–¥–∞.
"""

import logging
from aiogram import Router, F
from aiogram.types import CallbackQuery
from services.application.catalog.catalog_service import CatalogService
from dependencies import get_catalog_service
from .base_handler import BaseCatalogHandler
from .mixins import ErrorHandlerMixin, LocalizationMixin, ProgressMixin, ValidationMixin

router = Router()
logger = logging.getLogger(__name__)


class CatalogHandler(BaseCatalogHandler, ErrorHandlerMixin, LocalizationMixin, ProgressMixin, ValidationMixin):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–∞—Ç–∞–ª–æ–≥–æ–º –ø—Ä–æ–¥—É–∫—Ç–æ–≤"""
    
    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–∞—Ç–∞–ª–æ–≥–∞"""
        super().__init__()
        self.logger.info(f"[{self.__class__.__name__}] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    
    async def handle_callback(self, callback: CallbackQuery) -> None:
        """–†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback"""
        await handle_show_catalog(callback)


# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
catalog_handler = CatalogHandler()

@router.callback_query(F.data == "menu:catalog")
async def show_catalog(callback: CallbackQuery):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–∫–∞–∑–∞ –∫–∞—Ç–∞–ª–æ–≥–∞ —Ç–æ–≤–∞—Ä–æ–≤.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç CatalogHandler —Å –º–∏–∫—Å–∏–Ω–∞–º–∏ –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–¥–∞.
    """
    await catalog_handler.process_callback(callback)


# –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ –∫–ª–∞—Å—Å CatalogHandler
async def handle_show_catalog(self, callback: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∫–∞–∑–∞ –∫–∞—Ç–∞–ª–æ–≥–∞ —Ç–æ–≤–∞—Ä–æ–≤
    
    Args:
        callback: Callback –∑–∞–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    try:
        # –í–∞–ª–∏–¥–∞—Ü–∏—è
        validations = {
            "callback_data": {"patterns": [r"^menu:catalog$"]},
            "user_permissions": {"permissions": ["catalog_view"]}
        }
        validation_results = self.validate_all(callback, validations)
        validation_errors = self.get_validation_errors(validation_results)
        
        if validation_errors:
            loc = self.get_localization(callback)
            await self.send_error_message(callback, loc, "validation", 
                                        f"‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {', '.join(validation_errors)}")
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏—é
        loc = self.get_localization(callback)
        
        # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ
        progress_message = await self.create_simple_progress(callback, "catalog_loading", loc)
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Å–µ—Ä–≤–∏—Å –∫–∞—Ç–∞–ª–æ–≥–∞
            catalog_service = get_catalog_service()
            
            # –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ç–∞–ª–æ–≥ —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å
            products = await catalog_service.get_catalog_with_progress()
            
            if not products:
                # –ö–∞—Ç–∞–ª–æ–≥ –ø—É—Å—Ç
                empty_message = loc.t('catalog.empty', 'üì≠ –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤ –ø—É—Å—Ç')
                if progress_message:
                    await self.complete_simple_progress(progress_message, "catalog_loading", loc, False)
                    await callback.message.answer(empty_message)
                else:
                    await callback.message.answer(empty_message)
            else:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ç–∞–ª–æ–≥ —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å
                await catalog_service.send_catalog_to_user(callback, products, loc)
                
                if progress_message:
                    await self.complete_simple_progress(progress_message, "catalog_loading", loc, True)
        
        except Exception as e:
            if progress_message:
                await self.complete_simple_progress(progress_message, "catalog_loading", loc, False)
            await self.handle_error(e, callback, loc, "catalog_loading")
            
    except Exception as e:
        loc = self.get_localization(callback)
        await self.handle_error(e, callback, loc, "show_catalog")


# –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ –∫ –∫–ª–∞—Å—Å—É
# CatalogHandler.handle_callback = handle_show_catalog  # –¢–µ–ø–µ—Ä—å —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ –≤ –∫–ª–∞—Å—Å–µ
