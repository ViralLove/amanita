"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –º–µ—Ç—Ä–∏–∫ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –¥–ª—è —Ç–µ—Å—Ç–æ–≤
"""

import pytest
import time
import logging
from bot.tests.utils.performance_metrics import measure_performance, measure_fixture_performance

logger = logging.getLogger(__name__)

@measure_fixture_performance("demo_fixture")
@pytest.fixture
def demo_fixture():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Ñ–∏–∫—Å—Ç—É—Ä–∞ —Å –∏–∑–º–µ—Ä–µ–Ω–∏–µ–º –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"""
    logger.info("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Ñ–∏–∫—Å—Ç—É—Ä—ã")
    time.sleep(0.1)  # –ò–º–∏—Ç–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã
    return {"data": "test_data"}

@pytest.mark.asyncio
@measure_performance("demo_test")
async def test_performance_metrics_demo(demo_fixture):
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç —Å –∏–∑–º–µ—Ä–µ–Ω–∏–µ–º –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"""
    logger.info("üß™ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏")
    
    # –ò–º–∏—Ç–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Ç–µ—Å—Ç–∞
    time.sleep(0.2)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–∫—Å—Ç—É—Ä—ã
    assert demo_fixture["data"] == "test_data"
    
    logger.info("‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ")

@pytest.mark.asyncio
@measure_performance("memory_intensive_test")
async def test_memory_intensive_operation():
    """–¢–µ—Å—Ç —Å –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ã–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ø–∞–º—è—Ç–∏"""
    logger.info("üß™ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç —Å –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ã–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ø–∞–º—è—Ç–∏")
    
    # –°–æ–∑–¥–∞–µ–º –±–æ–ª—å—à–æ–π —Å–ø–∏—Å–æ–∫ –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–∞–º—è—Ç–∏
    large_list = [i for i in range(100000)]
    
    # –ò–º–∏—Ç–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö
    processed_data = [x * 2 for x in large_list[:1000]]
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    assert len(processed_data) == 1000
    assert processed_data[0] == 0
    assert processed_data[999] == 1998
    
    logger.info("‚úÖ –¢–µ—Å—Ç —Å –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ã–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ø–∞–º—è—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω")

def test_performance_metrics_summary():
    """–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç —Å –≤—ã–≤–æ–¥–æ–º —Å–≤–æ–¥–∫–∏ –º–µ—Ç—Ä–∏–∫"""
    logger.info("üìä –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ú–ï–¢–†–ò–ö –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò")
    
    from tests.utils.performance_metrics import performance_collector
    performance_collector.log_summary()
    
    logger.info("‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –º–µ—Ç—Ä–∏–∫ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞") 