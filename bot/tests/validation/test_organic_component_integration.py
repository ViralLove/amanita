#!/usr/bin/env python3
"""
–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç OrganicComponent –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ Product.
"""

import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), '..', '..'))

from model.organic_component import OrganicComponent
from model.product import Product, PriceInfo

def test_multi_component_product():
    """–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞ —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏"""
    try:
        # –°–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
        component1 = OrganicComponent('amanita_muscaria', 'Qm123456789', '60%')
        component2 = OrganicComponent('blue_lotus', 'Qm987654321', '40%')
        
        # –°–æ–∑–¥–∞–µ–º —Ü–µ–Ω—É
        price = PriceInfo(price=100, currency='EUR', weight='100', weight_unit='g')
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏
        product = Product(
            id=1,
            alias='multi_component_product',
            status=1,
            cid='QmProductCID123',
            title='Multi-Component Product',
            organic_components=[component1, component2],
            cover_image_url='QmImageCID123',
            categories=['mushroom', 'flower'],
            forms=['powder', 'tincture'],
            species='Mixed',
            prices=[price]
        )
        
        print('‚úÖ –ú–Ω–æ–≥–æ–∫–æ–º–ø–æ–Ω–µ–Ω—Ç–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ')
        print(f'  - –ö–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: {len(product.organic_components)}')
        print(f'  - –°—É–º–º–∞ –ø—Ä–æ–ø–æ—Ä—Ü–∏–π: 60% + 40% = 100%')
        
        pass
        
    except Exception as e:
        print(f'‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –º–Ω–æ–≥–æ–∫–æ–º–ø–æ–Ω–µ–Ω—Ç–Ω–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞: {e}')
        assert False, "–¢–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª"

def test_percentage_proportion_validation():
    """–¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø—Ä–æ—Ü–µ–Ω—Ç–Ω—ã—Ö –ø—Ä–æ–ø–æ—Ä—Ü–∏–π"""
    try:
        # –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å –ø—Ä–æ—Ü–µ–Ω—Ç–Ω—ã–º–∏ –ø—Ä–æ–ø–æ—Ä—Ü–∏—è–º–∏
        component1 = OrganicComponent('component1', 'Qm123456789', '25%')
        component2 = OrganicComponent('component2', 'Qm987654321', '75%')
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç
        price = PriceInfo(price=100, currency='EUR', weight='100', weight_unit='g')
        product = Product(
            id=2,
            alias='percentage_product',
            status=1,
            cid='QmProductCID456',
            title='Percentage Product',
            organic_components=[component1, component2],
            cover_image_url='QmImageCID456',
            categories=['test'],
            forms=['powder'],
            species='Test',
            prices=[price]
        )
        
        print('‚úÖ –ü—Ä–æ–¥—É–∫—Ç —Å –ø—Ä–æ—Ü–µ–Ω—Ç–Ω—ã–º–∏ –ø—Ä–æ–ø–æ—Ä—Ü–∏—è–º–∏ —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ')
        print(f'  - –°—É–º–º–∞: 25% + 75% = 100%')
        
        pass
        
    except Exception as e:
        print(f'‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø—Ä–æ—Ü–µ–Ω—Ç–Ω—ã—Ö –ø—Ä–æ–ø–æ—Ä—Ü–∏–π: {e}')
        assert False, "–¢–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª"

def test_weight_based_proportions():
    """–¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø—Ä–æ–ø–æ—Ä—Ü–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–µ—Å–∞"""
    try:
        # –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å –≤–µ—Å–æ–≤—ã–º–∏ –ø—Ä–æ–ø–æ—Ä—Ü–∏—è–º–∏
        component1 = OrganicComponent('component1', 'Qm123456789', '50g')
        component2 = OrganicComponent('component2', 'Qm987654321', '50g')
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç
        price = PriceInfo(price=100, currency='EUR', weight='100', weight_unit='g')
        product = Product(
            id=3,
            alias='weight_product',
            status=1,
            cid='QmProductCID789',
            title='Weight-Based Product',
            organic_components=[component1, component2],
            cover_image_url='QmImageCID789',
            categories=['test'],
            forms=['powder'],
            species='Test',
            prices=[price]
        )
        
        print('‚úÖ –ü—Ä–æ–¥—É–∫—Ç —Å –≤–µ—Å–æ–≤—ã–º–∏ –ø—Ä–æ–ø–æ—Ä—Ü–∏—è–º–∏ —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ')
        print(f'  - –ö–æ–º–ø–æ–Ω–µ–Ω—Ç 1: 50g')
        print(f'  - –ö–æ–º–ø–æ–Ω–µ–Ω—Ç 2: 50g')
        
        pass
        
    except Exception as e:
        print(f'‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –≤–µ—Å–æ–≤—ã—Ö –ø—Ä–æ–ø–æ—Ä—Ü–∏–π: {e}')
        assert False, "–¢–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª"

if __name__ == '__main__':
    print('üß™ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ OrganicComponent –≤ Product')
    print('=' * 60)
    
    test_multi_component_product()
    test_percentage_proportion_validation()
    test_weight_based_proportions()
    
    print('=' * 60)
    print('‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ')
