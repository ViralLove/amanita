#!/bin/bash

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å–∫—Ä–∏–ø—Ç–∞ –∏ –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"

echo " –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å–∫—Ä–∏–ø—Ç–∞: $SCRIPT_DIR"
echo "üè† –ö–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞: $PROJECT_ROOT"

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞
cd "$PROJECT_ROOT"

# –î–æ–±–∞–≤–ª—è–µ–º Homebrew –ø—É—Ç–∏ –≤ PATH –¥–ª—è macOS
export PATH="/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/usr/bin:$PATH"

echo "üîç –û—Ç–ª–∞–¥–∫–∞ PATH: $PATH"

# –ó–∞–≥—Ä—É–∂–∞–µ–º .env —Ñ–∞–π–ª –∏–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ bot
if [ -f "bot/.env" ]; then
    export $(cat bot/.env | grep -v '^#' | xargs)
    echo "‚úÖ .env —Ñ–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ bot/.env"
else
    echo "‚ùå .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ bot/.env"
    echo "–°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ bot/ –∏–ª–∏ —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –µ–≥–æ –≤ –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã
if [ -z "$AMANITA_API_URL" ] || [ -z "$AMANITA_API_KEY" ] || [ -z "$AMANITA_API_SECRET" ] || [ -z "$SELLER_ADDRESS" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –Ω–µ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ .env"
    echo "–¢—Ä–µ–±—É–µ–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:"
    echo "  - AMANITA_API_URL"
    echo "  - AMANITA_API_KEY" 
    echo "  - AMANITA_API_SECRET"
    echo "  - SELLER_ADDRESS"
    echo ""
    echo "üìã –¢–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è:"
    echo "  - AMANITA_API_URL: $AMANITA_API_URL"
    echo "  - AMANITA_API_KEY: $AMANITA_API_KEY"
    echo "  - AMANITA_API_SECRET: $AMANITA_API_SECRET"
    echo "  - SELLER_ADDRESS: $SELLER_ADDRESS"
    exit 1
fi

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç–∏ –∫ –∫–æ–º–∞–Ω–¥–∞–º –Ω–∞–ø—Ä—è–º—É—é
echo "üîç –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç–∏ –∫ –∫–æ–º–∞–Ω–¥–∞–º..."

# Python3 - –ø—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
if [ -f "/opt/homebrew/bin/python3" ]; then
    PYTHON_CMD="/opt/homebrew/bin/python3"
    echo "‚úÖ python3 –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏: $PYTHON_CMD"
elif [ -f "/usr/local/bin/python3" ]; then
    PYTHON_CMD="/usr/local/bin/python3"
    echo "‚úÖ python3 –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏: $PYTHON_CMD"
elif [ -f "/usr/bin/python3" ]; then
    PYTHON_CMD="/usr/bin/python3"
    echo "‚úÖ python3 –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏: $PYTHON_CMD"
elif command -v python3 >/dev/null 2>&1; then
    PYTHON_CMD="python3"
    echo "‚úÖ python3 –Ω–∞–π–¥–µ–Ω –≤ PATH: $PYTHON_CMD"
else
    echo "‚ùå –û—à–∏–±–∫–∞: python3 –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ"
    echo "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ: brew install python"
    exit 1
fi

# Curl - –ø—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
if [ -f "/opt/homebrew/bin/curl" ]; then
    CURL_CMD="/opt/homebrew/bin/curl"
    echo "‚úÖ curl –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏: $CURL_CMD"
elif [ -f "/usr/local/bin/curl" ]; then
    CURL_CMD="/usr/local/bin/curl"
    echo "‚úÖ curl –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏: $CURL_CMD"
elif [ -f "/usr/bin/curl" ]; then
    CURL_CMD="/usr/bin/curl"
    echo "‚úÖ curl –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏: $CURL_CMD"
elif command -v curl >/dev/null 2>&1; then
    CURL_CMD="curl"
    echo "‚úÖ curl –Ω–∞–π–¥–µ–Ω –≤ PATH: $CURL_CMD"
else
    echo "‚ùå –û—à–∏–±–∫–∞: curl –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ"
    echo "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ: brew install curl"
    exit 1
fi

echo " –ò—Å–ø–æ–ª—å–∑—É–µ–º python3: $PYTHON_CMD"
echo " –ò—Å–ø–æ–ª—å–∑—É–µ–º curl: $CURL_CMD"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–æ–º–∞–Ω–¥—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ä–∞–±–æ—Ç–∞—é—Ç
echo "üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º python3: $($PYTHON_CMD --version 2>&1)"
echo "üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º curl: $($CURL_CMD --version 2>&1 | head -1)"

# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
echo "üîç –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º timestamp..."
TIMESTAMP=$(date +%s)
echo "üîç –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º nonce..."
NONCE=$($PYTHON_CMD -c "import secrets; print(secrets.token_hex(16))")
METHOD="GET"
PATH="/products/${SELLER_ADDRESS}"
BODY=""

# –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–¥–ø–∏—Å–∏
MESSAGE="${METHOD}\n${PATH}\n${BODY}\n${TIMESTAMP}\n${NONCE}"

echo "üîç –°–æ–∑–¥–∞–µ–º HMAC –ø–æ–¥–ø–∏—Å—å..."
echo "üîç –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á: $AMANITA_API_SECRET"

# –°–æ–∑–¥–∞–µ–º HMAC –ø–æ–¥–ø–∏—Å—å –∏—Å–ø–æ–ª—å–∑—É—è Python (—Ç–æ—á–Ω–æ –∫–∞–∫ –≤ —Ä–∞–±–æ—Ç–∞—é—â–µ–º —Å–∫—Ä–∏–ø—Ç–µ)
SIGNATURE=$($PYTHON_CMD -c "
import hmac
import hashlib
import sys

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
method = sys.argv[1]
path = sys.argv[2]
body = sys.argv[3]
timestamp = sys.argv[4]
nonce = sys.argv[5]
secret_key = sys.argv[6]

# –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–¥–ø–∏—Å–∏
message = f'{method}\\n{path}\\n{body}\\n{timestamp}\\n{nonce}'

# –°–æ–∑–¥–∞–µ–º HMAC –ø–æ–¥–ø–∏—Å—å
signature = hmac.new(
    secret_key.encode('utf-8'),
    message.encode('utf-8'),
    hashlib.sha256
).hexdigest()

print(signature)
" "$METHOD" "$PATH" "$BODY" "$TIMESTAMP" "$NONCE" "$AMANITA_API_SECRET")

echo ""
echo "üöÄ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≥–æ—Ç–æ–≤—ã:"
echo "üåê API URL: $AMANITA_API_URL"
echo "üîë API Key: $AMANITA_API_KEY"
echo "üë§ Seller Address: $SELLER_ADDRESS"
echo "‚è∞ Timestamp: $TIMESTAMP"
echo "üé≤ Nonce: $NONCE"
echo "üîê Signature: $SIGNATURE"
echo "üìù Message: $MESSAGE"
echo "üõ£Ô∏è  Path: $PATH"

echo ""
echo "üîç –í—ã–ø–æ–ª–Ω—è–µ–º API –∑–∞–ø—Ä–æ—Å..."
echo ""

# –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
$CURL_CMD -X GET "${AMANITA_API_URL}/products/${SELLER_ADDRESS}" \
  -H "Content-Type: application/json" \
  -H "X-API-Key: $AMANITA_API_KEY" \
  -H "X-Timestamp: $TIMESTAMP" \
  -H "X-Nonce: $NONCE" \
  -H "X-Signature: $SIGNATURE" \
  -v

echo ""
echo ""
echo "üìù –î–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è, –≤–æ—Ç CURL –∫–æ–º–∞–Ω–¥–∞:"
echo "curl -X GET \"${AMANITA_API_URL}/products/${SELLER_ADDRESS}\" \\"
echo "  -H \"Content-Type: application/json\" \\"
echo "  -H \"X-API-Key: $AMANITA_API_KEY\" \\"
echo "  -H \"X-Timestamp: $TIMESTAMP\" \\"
echo "  -H \"X-Nonce: $NONCE\" \\"
echo "  -H \"X-Signature: $SIGNATURE\" \\"
echo "  -v"