<?php
declare(strict_types=1);

require_once __DIR__ . '/../vendor/autoload.php';

// Инициализируем WP-Mock
WP_Mock::bootstrap();

// Загружаем файлы плагина для тестирования
require_once __DIR__ . '/../includes/Logger.php';
require_once __DIR__ . '/../includes/SyncProduct.php';

/**
 * —— Минимальные заглушки WordPress — добавляйте по мере надобности. ——
 */
if (! function_exists('plugin_dir_path')) {
    function plugin_dir_path(string $file): string
    {
        return dirname($file) . '/';
    }
}

if (! function_exists('apply_filters')) {
    function apply_filters(string $hook, mixed $value, ...$args): mixed
    {
        // В юнит-тестах по умолчанию ничего не "фильтруем".
        return $value;
    }
}

if (! function_exists('get_option')) {
    function get_option(string $option, $default = false) {
        return $default;
    }
}

if (! function_exists('update_option')) {
    function update_option(string $option, $value) {
        return true;
    }
}

if (! function_exists('delete_option')) {
    function delete_option(string $option) {
        return true;
    }
}

if (! function_exists('get_current_user_id')) {
    function get_current_user_id() {
        return 1;
    }
}

if (! function_exists('current_time')) {
    function current_time(string $type = 'timestamp') {
        return time();
    }
}

if (! function_exists('wp_verify_nonce')) {
    function wp_verify_nonce(string $nonce, string $action) {
        return true;
    }
}

if (! function_exists('current_user_can')) {
    function current_user_can(string $capability) {
        return true;
    }
}

if (! function_exists('get_post_meta')) {
    function get_post_meta(int $post_id, string $key, bool $single = true) {
        return '';
    }
}

if (! function_exists('update_post_meta')) {
    function update_post_meta(int $post_id, string $key, $value) {
        return true;
    }
}

if (! function_exists('get_transient')) {
    function get_transient(string $transient) {
        return false;
    }
}

if (! function_exists('set_transient')) {
    function set_transient(string $transient, $value, int $expiration = 0) {
        return true;
    }
}

if (! function_exists('wp_remote_post')) {
    function wp_remote_post(string $url, array $args = []) {
        return ['response' => ['code' => 200], 'body' => '{"success":true}'];
    }
}

if (! function_exists('wp_remote_retrieve_response_code')) {
    function wp_remote_retrieve_response_code($response) {
        return 200;
    }
}

if (! function_exists('wp_remote_retrieve_body')) {
    function wp_remote_retrieve_body($response) {
        return '{"success":true}';
    }
}

if (! function_exists('is_wp_error')) {
    function is_wp_error($thing) {
        return false;
    }
}

if (! function_exists('wc_get_product')) {
    function wc_get_product($product_id) {
        return false;
    }
}

if (! function_exists('wp_die')) {
    function wp_die($message = '', $title = '', $args = []) {
        throw new Exception($message);
    }
}

if (! function_exists('wp_redirect')) {
    function wp_redirect(string $location, int $status = 302) {
        return true;
    }
}

if (! function_exists('add_query_arg')) {
    function add_query_arg($args, string $url) {
        return $url . '?' . http_build_query($args);
    }
}

if (! function_exists('get_edit_post_link')) {
    function get_edit_post_link(int $post_id, string $context = 'display') {
        return 'http://example.com/wp-admin/post.php?post=' . $post_id . '&action=edit';
    }
}

if (! function_exists('admin_url')) {
    function admin_url(string $path = '') {
        return 'http://example.com/wp-admin/' . $path;
    }
}

if (! function_exists('esc_url')) {
    function esc_url(string $url) {
        return $url;
    }
}

if (! function_exists('esc_attr')) {
    function esc_attr(string $text) {
        return htmlspecialchars($text, ENT_QUOTES, 'UTF-8');
    }
}

if (! function_exists('esc_html')) {
    function esc_html(string $text) {
        return htmlspecialchars($text, ENT_QUOTES, 'UTF-8');
    }
}

if (! function_exists('wp_nonce_field')) {
    function wp_nonce_field(string $action, string $name = '_wpnonce', bool $referer = true, bool $echo = true) {
        $nonce_field = '<input type="hidden" id="' . $name . '" name="' . $name . '" value="test_nonce" />';
        if ($echo) {
            echo $nonce_field;
        }
        return $nonce_field;
    }
}

if (! function_exists('wp_create_nonce')) {
    function wp_create_nonce(string $action) {
        return 'test_nonce';
    }
}

if (! function_exists('wp_get_attachment_image_url')) {
    function wp_get_attachment_image_url(int $attachment_id, string $size = 'thumbnail') {
        return 'http://example.com/image.jpg';
    }
}

if (! function_exists('get_the_terms')) {
    function get_the_terms(int $post_id, string $taxonomy) {
        return [];
    }
}

if (! function_exists('wc_attribute_label')) {
    function wc_attribute_label(string $name) {
        return 'Test Attribute';
    }
}

if (! function_exists('trailingslashit')) {
    function trailingslashit(string $string) {
        return rtrim($string, '/') . '/';
    }
}

if (! function_exists('json_encode')) {
    function json_encode($value, int $flags = 0, int $depth = 512) {
        return '{"test":"data"}';
    }
}

if (! function_exists('json_decode')) {
    function json_decode(string $json, bool $assoc = false, int $depth = 512, int $flags = 0) {
        return ['success' => true];
    }
}

if (! class_exists('WP_Error')) {
    class WP_Error {
        public $code;
        public $message;
        
        public function __construct($code, $message) {
            $this->code = $code;
            $this->message = $message;
        }
    }
} 