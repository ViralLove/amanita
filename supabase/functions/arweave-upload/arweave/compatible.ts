import { signArweaveTransaction } from "../crypto/arweave-rsa-pss.ts";

export async function signTransaction(
  arweave: any,
  transaction: any,
  privateKey: JsonWebKey
): Promise<void> {
  console.log("üîê –ò—Å–ø–æ–ª—å–∑—É–µ–º RSA-PSS –ø–æ–¥–ø–∏—Å—å ArWeave...");
  
  const signatureData = await transaction.getSignatureData();
  console.log("   –î–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–¥–ø–∏—Å–∏ —Ä–∞–∑–º–µ—Ä:", signatureData.length, "–±–∞–π—Ç");

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º RSA-PSS —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é
  const { signature, transactionId } = await signArweaveTransaction(privateKey, signatureData);
  const signatureB64Url = arweave.utils.bufferTob64Url(signature);

  transaction.signature = signatureB64Url;
  console.log("‚úÖ RSA-PSS –ø–æ–¥–ø–∏—Å—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞:", signatureB64Url.substring(0, 20) + "...");

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π transaction ID
  transaction.id = transactionId;
  
  console.log("‚úÖ Transaction ID —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:", transactionId);
  console.log("   ID –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 'ar':", transactionId.startsWith('ar'));
}
